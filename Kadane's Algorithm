// class Main{
//     public static void main(String ar[]){
//         int[] arr={1, 2, 3, 4, 5};
//         int n=arr.length;
//         for(int st=0; st<n; st++){
//             for(int end=st; end<n; end++){
//                 for(int i=st; i<=end; i++){
//                     System.out.print(arr[i]);
//                 }
//                 System.out.print(" ");
//             }
//             System.out.println();
//         }
//     }
// }   
//Program to print subarrays of an array





// class Main{
//     public static void main(String ar[]){
//         int[] arr={1, 2, 3, 4, 5};
//         int n=arr.length;
//         int maxSum=Integer.MIN_VALUE;
//         for(int st=0; st<n; st++){
//             int currSum=0;
//             for(int end=st; end<n; end++){
//                 currSum+=arr[end];
//                 maxSum=Math.max(currSum, maxSum);
//             }
//         }
//         System.out.println("Maximum Subarray Sum = " + maxSum);
//     }
// }   
//Brute force approach to find maximum sum subarray




// class Main{
//     public static void main(String ar[]){
//         int[] arr={1, 9, -4, 8, 3, -2, -7, 6};
//         int n=arr.length;
//         int currSum=0;
//         int maxSum=Integer.MIN_VALUE;
//         for(int i=0; i<n; i++){
//             currSum+=arr[i];
//             maxSum=Math.max(maxSum, currSum);
//             if(currSum<0){
//                 currSum=0;
//             }
//         }
//         System.out.println("Maximum sum: "+maxSum);
//     }
// }
//Optimal Approach to find Maximum sum subarray
